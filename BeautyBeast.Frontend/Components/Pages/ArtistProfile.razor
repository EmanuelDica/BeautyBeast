@page "/users/account/artist"
@inject NavigationManager NavigationManager
@inject Services.UserService UserService
@inject Services.ArtistService ArtistService
@inject Services.PostService PostService

<div class="container mt-4">
    @if (user == null)
    {
        <div class="alert alert-info">Loading artist profile...</div>
    }
    else
    {
        <div class="card p-4">
            <h5 class="card-title">üé® Artist Profile: @user.FullName (@user.Email)</h5>

            <h6 class="mt-4">üèÜ Achievements:</h6>
            <ul class="list-group">
                @foreach (var achievement in artistAchievements)
                {
                    <li class="list-group-item d-flex align-items-center">
                        <span class="me-2">‚≠ê</span> @achievement.Achievement
                    </li>
                }
            </ul>

            <button class="btn btn-primary mt-3" @onclick="NavigateToManageTreatments">
                üíÜ Manage Treatments
            </button>

            <h6 class="mt-4">üñºÔ∏è Posts:</h6>
            <div class="row">
                @foreach (var post in posts)
                {
                    <div class="col-md-6 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <p class="card-text">
                                    <strong>[@(post.MediaUrls.Any() ? "MEDIA" : "STATUS")]</strong> @post.Description
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    private UserDto? user;
    private List<PostDto> posts = new();
    private List<ArtistAchievementDto> artistAchievements = new();

    protected override async Task OnInitializedAsync()
{
    try
    {
        user = await UserService.GetCurrentUserAsync();
        if (user != null)
        {
            posts = await PostService.GetPostsByUserIdAsync(user.Id);
            artistAchievements = await ArtistService.GetAchievementsByArtistIdAsync(user.Id);
        }
        else
        {
            Console.WriteLine("No current user found.");
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error loading artist profile: {ex.Message}");
    }
}

    private void NavigateToManageTreatments()
    {
        NavigationManager.NavigateTo("/treatments/manage");
    }
}