@page "/account/{id:int}"
@inject NavigationManager NavigationManager
@inject Services.UserService UserService
@inject Services.ArtistService ArtistService
@inject Services.PostService PostService
@inject Services.StatusService StatusService
@using BeautyBeast.Frontend.Dtos
@using BeautyBeast.Frontend.Components
@rendermode InteractiveServer

<div class="container mt-4">
    @if (user == null)
    {
        <div class="alert alert-info">Loading artist profile...</div>
    }
    else
    {
        <div class="card p-4">
            <h5 class="card-title">üé® Artist Profile: @user.FullName (@user.Email)</h5>

            <h6 class="mt-4">üèÜ Achievements:</h6>
            <ul class="list-group">
                @foreach (var achievement in artistAchievements)
                {
                    <li class="list-group-item d-flex align-items-center">
                        <span class="me-2">‚≠ê</span> @achievement.Achievement
                    </li>
                }
            </ul>

            <!-- Navigate to the treatments list page for this account -->
            <button class="btn btn-primary mt-3" @onclick="NavigateToManageTreatments">
                üíÜ Manage Treatments
            </button>

            <h6 class="mt-4">üñºÔ∏è Posts:</h6>
            <div>
                @if (posts != null && posts.Any())
                {
                    @foreach (var post in posts)
                    {
                        <FeedItem 
                            Poster="user!" 
                            Content="@post.Description" 
                            Comments="post.Comments ?? new List<CommentDto>()" />
                    }
                }
                else
                {
                    <p>No posts available.</p>
                }
            </div>

            <h6 class="mt-4">‚úç Statuses:</h6>
            <div>
                @if (statuses != null && statuses.Any())
                {
                    @foreach (var status in statuses)
                    {
                        <FeedItem 
                            Poster="user!" 
                            Content="@status.Text" 
                            Comments="status.Comments ?? new List<CommentDto>()" />
                    }
                }
                else
                {
                    <p>No statuses available.</p>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int id { get; set; }
    private UserDto? user;
    private List<PostDto> posts = new();
    private List<StatusDto> statuses = new();
    private List<ArtistAchievementDto> artistAchievements = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Retrieve the current user (should match the id in the route)
            user = await UserService.GetCurrentUserAsync();
            if (user != null)
            {
                // Fetch posts, statuses, and achievements for the current user.
                posts = await PostService.GetPostsByUserIdAsync(user.Id);
                statuses = await StatusService.GetAllStatusesAsync();
                artistAchievements = await ArtistService.GetAchievementsByArtistIdAsync(user.Id);
            }
            else
            {
                Console.WriteLine("No current user found.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading artist profile: {ex.Message}");
        }
    }

    private void NavigateToManageTreatments()
    {
        // Navigate to the treatments list for this account.
        NavigationManager.NavigateTo($"/account/{id}/treatments");
    }
}