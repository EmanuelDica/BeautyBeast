@* @page "/users/profile/{UserId:int}" *@
@page "/user/account"
@inject NavigationManager NavigationManager
@inject Services.UserService UserService
@inject Services.ClientService ClientService
@inject Services.ArtistService ArtistService
@inject Services.PostService PostService
@using BeautyBeast.Frontend.Dtos

<div class="container mt-4">
    @if (user == null)
    {
        <div class="alert alert-info">Loading profile...</div>
    }
    else
    {
        <div class="card p-4">
            <h5 class="card-title">Profile: @user.FullName (@user.Email)</h5>

            @if (isArtist)
            {
                <h6 class="mt-4">Achievements:</h6>
                <ul class="list-group">
                    @foreach (var achievement in artistAchievements)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <span class="me-2">‚≠ê</span> @achievement.Achievement
                        </li>
                    }
                </ul>

                <button class="btn btn-primary mt-3" @onclick="NavigateToManageTreatments">
                    Manage Treatments
                </button>
            }
            else if (isClient)
            {
                <button class="btn btn-primary mt-3" @onclick="NavigateToMyBookings">
                    View My Bookings
                </button>
            }

            <h6 class="mt-4">Posts:</h6>
            <div class="row">
                @foreach (var post in posts)
                {
                    <div class="col-md-6 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <p class="card-text">
                                    <strong>[@(post.MediaUrls.Any() ? "MEDIA" : "STATUS")]</strong> @post.Description
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int UserId { get; set; }
    private UserDto? user;
    private List<PostDto> posts = new();
    private List<ArtistAchievementDto> artistAchievements = new();
    private bool isArtist = false;
    private bool isClient = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UserService.GetUserByIdAsync(UserId);
            posts = await PostService.GetPostsByUserIdAsync(UserId);

            if (await ArtistService.IsArtistAsync(UserId))
            {
                isArtist = true;
                artistAchievements = await ArtistService.GetAchievementsByArtistIdAsync(UserId);
            }
            else if (await ClientService.IsClientAsync(UserId))
            {
                isClient = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading profile: {ex.Message}");
        }
    }

    private void NavigateToManageTreatments()
    {
        NavigationManager.NavigateTo($"/treatments/manage/{UserId}");
    }

    private void NavigateToMyBookings()
    {
        NavigationManager.NavigateTo($"/mybookings/{UserId}");
    }
}