@inject Services.UserService UserService
@inject NavigationManager NavigationManager

<div class="offcanvas offcanvas-start bg-light" tabindex="-1" id="sideDrawer" aria-labelledby="sideDrawerLabel" style="width: 250px;">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="sideDrawerLabel">Navigation</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                <a href="/account/@userId/Treatments" class="text-decoration-none">Treatments</a>
            </li>
            <li class="list-group-item">
                <a href="/account/@userId/post/media" class="text-decoration-none">üì∑ Post Media</a>
            </li>
            <li class="list-group-item">
                <a href="/account/@userId/post/status" class="text-decoration-none">‚úç Post Status</a>
            </li>
            <li class="list-group-item">
                <a href="/account/signin" class="text-decoration-none">Sign In</a>
            </li>
            <li class="list-group-item">
                <a href="/account/signup" class="text-decoration-none">Sign Up</a>
            </li>
            <li class="list-group-item">
                <a href="/account/@userId/friends" class="text-decoration-none">Friends</a>
            </li>
            <li class="list-group-item">
                <a href="/about" class="text-decoration-none">About</a>
            </li>
        </ul>
    </div>
</div>

@code {
    private int userId;
    private bool initialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !initialized)
        {
            var user = await UserService.GetCurrentUserAsync();
            if (user != null)
            {
                userId = user.Id;
                StateHasChanged(); // re-render to show links with userId
            }
            else
            {
                NavigationManager.NavigateTo("/account/signin");
            }

            initialized = true;
        }
    }
}