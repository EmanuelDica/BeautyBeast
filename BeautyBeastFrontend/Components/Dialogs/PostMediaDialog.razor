@namespace BeautyBeastFrontend.Components.Dialogs
@using BeautyBeastFrontend.Dtos
@using MudBlazor
@using Microsoft.AspNetCore.Components.Forms
@inject Services.PostService PostService
@inject HttpClient HttpClient
@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        <MudFileUpload T="IBrowserFile" Accept=".png, .jpg, .jpeg, .gif" FilesChanged="UploadFiles" MaximumFileCount="5">
            <ActivatorContent>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload">
                    Select Images to Upload
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Upload</MudButton>
    </DialogActions>
</MudDialog>

@if (uploadedFileUrls.Any())
{
    <MudList T="string">
        @foreach (var url in uploadedFileUrls)
        {
            <MudListItem T="string" Icon="@Icons.Material.Filled.AttachFile">
                <a href="@url" target="_blank">@url</a>
            </MudListItem>
        }
    </MudList>
}

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;

    private IList<IBrowserFile> files = new List<IBrowserFile>();
    private List<string> uploadedFileUrls = new List<string>();

    private async Task UploadFiles(IBrowserFile file)
    {
        try
        {
            var formData = new MultipartFormDataContent();
            var fileStream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024); // Max file size 10MB
            formData.Add(new StreamContent(fileStream), "file", file.Name);

            var response = await HttpClient.PostAsync("/Upload/upload", formData);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<UploadResponse>();
                if (result != null)
                {
                    uploadedFileUrls.Add(result.Path);
                }
            }
            else
            {
                Console.WriteLine("File upload failed.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error uploading file: {ex.Message}");
        }
    }

    private void Cancel() => MudDialog.Cancel();

    private void Submit() => MudDialog.Close(DialogResult.Ok(uploadedFileUrls));

    private class UploadResponse
    {
        public string Path { get; set; } = string.Empty;
    }
}